apiVersion: apps/v1
kind: Deployment
metadata:
  name: goapp
  namespace: goapp-namespace
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: goapp
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: goapp
    spec:
      containers:
        - image: 812290705309.dkr.ecr.us-west-1.amazonaws.com/goapp:latest
          imagePullPolicy: Always
          name: knote
          ports:
            - containerPort: 3000
              protocol: TCP
          env:
            - name: MONGO_HOST
              value: mongo
            - name: MONGO_PORT
              value: 27017
          livenessProbe:
            httpGet:
              path: "/"
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: goapp
  namespace: goapp-namespace
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: goapp

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: goapp
  namespace: goapp-namespace
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-port: "8080"
    alb.ingress.kubernetes.io/healthcheck-path: "/"
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTP"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "10"
    alb.ingress.kubernetes.io/target-type: "ip"
spec:
  rules:
     - http:
        paths:
          - path: /*
            pathType: Prefix
            backend:
              service:
                name: goapp
                port:
                  number: 80
